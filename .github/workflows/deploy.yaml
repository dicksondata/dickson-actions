name: Deploy

on:
  workflow_call:
    inputs:
      registry:
        required: true
        type: string
      repository:
        required: true
        type: string
      cluster:
        required: true
        type: string
      namespace:
        required: true
        type: string
      krane-dir:
        required: true
        type: string
      version:
        required: false
        type: string
      aws-region:
        required: false
        type: string
        default: us-east-1
      kubectl-version:
        required: false
        type: string
        default: v1.30.5
      approval:
        required: false
        type: boolean
        default: false
    secrets:
      aws-access-key-id:
        required: true
      aws-secret-access-key:
        required: true

jobs:
  approval:
    if: inputs.approval
    runs-on: ubuntu-latest
    timeout-minutes: 1440  # 24 hours timeout
    steps:
      - name: Pending approval
        id: approval
        uses: trstringer/manual-approval@v1
        timeout-minutes: 1440
        with:
          secret: ${{ github.token }}
          approvers: Admins
          minimum-approvals: 1
          issue-title: "Deployment Approval Required - ${{ inputs.cluster }}"
          issue-body: |
            A new deployment to ${{ inputs.cluster }} environment requires your approval.

            If no approval is given within 24 hours, the workflow will timeout and need to be re-run.

            Please review and approve or reject this deployment.
          exclude-workflow-initiator-as-approver: true

  deploy:
    needs: [approval]
    if: always() && (needs.approval.result == 'success' || needs.approval.result == 'skipped')
    runs-on: ubuntu-latest
    container:
      image: ruby:3.1-alpine3.19
    steps:
      - uses: actions/checkout@v3.1.0

      - name: Install AWS CLI
        run: apk add aws-cli

      - name: Configure AWS CLI
        uses: aws-actions/configure-aws-credentials@v1.7.0
        with:
          aws-access-key-id: ${{ secrets.aws-access-key-id }}
          aws-secret-access-key: ${{ secrets.aws-secret-access-key }}
          aws-region: ${{ inputs.aws-region }}
        
      - name: Install kubectl
        uses: Azure/setup-kubectl@v3
        with:
          version: ${{ inputs.kubectl-version }}

      - name: Configure kubectl
        run: aws eks update-kubeconfig --name ${{ inputs.cluster }} --alias ${{ inputs.cluster }}

      - name: Install dependencies for Krane
        run: apk add build-base

      - name: Install Krane
        run: gem install krane

      - name: Extract Docker metadata
        if: inputs.version == ''
        id: meta
        uses: docker/metadata-action@v4.1.1
        with:
          images: ${{ inputs.registry }}/${{ inputs.repository }}
          tags: type=sha

      - name: Deploy
        run: |
          krane render --filenames ${{ inputs.krane-dir }} --bindings=version=${{ inputs.version || steps.meta.outputs.version }} |
          krane deploy ${{ inputs.namespace }} ${{ inputs.cluster }} -f -
